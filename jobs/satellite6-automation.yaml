#==============================================================================
# Job Templates
#==============================================================================
- job-template:
    disabled: false
    name: 'provisioning-{satellite_version}-{os}'
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    node: sat6-{satellite_version}
    parameters:
        - choice:
            name: SATELLITE_DISTRIBUTION
            choices:
                - 'INTERNAL AK'
                - 'INTERNAL'
                - 'INTERNAL REPOFILE'
                - 'GA'
                - 'BETA'
                - 'UPSTREAM'
                - 'ISO'
            description: Make sure to select the right Satellite release you want to install, otherwise the job can fail.
        - string:
            name: BASE_URL
            description: Required when Satellite distribution is INTERNAL
        - string:
            name: CAPSULE_URL
            description: Required when Satellite distribution is INTERNAL and we require latest External Capsule setups. |
                Not required in CDN distribution, this content should be enabled/synced from cdn.redhat.com using manifests. |
                Leaving this blank picks the latest CAPSULE repo. Override if required.
        - string:
            name: RHEL6_TOOLS_URL
            description: Required when Satellite distribution is INTERNAL and we require latest SatTools Client packages. |
                Not required in CDN distribution, this content should be enabled/synced from cdn.redhat.com using manifests. |
                Leaving this blank picks the latest SATTOOLS repo. Override if required.
        - string:
            name: RHEL7_TOOLS_URL
            description: Required when Satellite distribution is INTERNAL and we require latest SatTools Client packages. |
                Not required in CDN distribution, this content should be enabled/synced from cdn.redhat.com using manifests. |
                Leaving this blank picks the latest SATTOOLS repo. Override if required.
        - string:
            name: IMAGE
            description: |
                Specify custom RHEL source image to be used for automation.
        - bool:
            name: RUBY_CODE_COVERAGE
            default: false
            description: |
                Configure the Base image of Satellite6 with the needed Ruby code coverage stuff.
                Ruby Code coverage is currently optional temporarily.
        - satellite6-provisioning-parameters
        - satellite6-authentication-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/automation-tools.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                DISTRO={os}
                SATELLITE_VERSION={satellite_version}
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="BUILD_LABEL"}}'
    builders:
        - satellite6-provisioning-builders
        - inject:
            properties-file: build_env.properties
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-{satellite_version}-tier1-{os}'
              predefined-parameters: |
                SERVER_HOSTNAME=${{SERVER_HOSTNAME}}
                SATELLITE_DISTRIBUTION=${{SATELLITE_DISTRIBUTION}}
                RHEL6_TOOLS_REPO=${{RHEL6_TOOLS_REPO}}
                RHEL7_TOOLS_REPO=${{RHEL7_TOOLS_REPO}}
                CAPSULE_REPO=${{CAPSULE_REPO}}
                SUBNET=${{SUBNET}}
                NETMASK=${{NETMASK}}
                GATEWAY=${{GATEWAY}}
                BRIDGE=${{BRIDGE}}
                BUILD_LABEL=${{BUILD_LABEL}}
                DISCOVERY_ISO=${{DISCOVERY_ISO}}
                ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}
                IMAGE=${{IMAGE}}
                SAUCE_BROWSER=${{SAUCE_BROWSER}}
                SAUCE_PLATFORM=${{SAUCE_PLATFORM}}
                RUBY_CODE_COVERAGE=${{RUBY_CODE_COVERAGE}}
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-archiver

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-tier1-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=tier1
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - shell: echo "POLARION_RELEASE=${{BUILD_LABEL%%-*}}" > build_env.txt
        - inject:
            properties-file: build_env.txt
        - satellite6-automation-builders
        - satellite6-polarion-testrun-builders:
            parallel_results: "tier1-parallel-results.xml"
            sequential_results: "tier1-sequential-results.xml"
            satellite_version: "{satellite_version}"
            os: "{os}"
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-{satellite_version}-tier2-{os}'
              current-parameters: true
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[1234])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                  - project: 'satellite6-automation-performance-report'
                    predefined-parameters: |
                      OS={os}
                      BUILD_LABEL=${{BUILD_LABEL}}
                    parameter-factories:
                      - factory: binaryfile
                        parameter-name: JUNIT
                        file-pattern: tier1-parallel-results.xml
                        no-files-found-action: FAIL
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-tier2-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=tier2
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - shell: echo "POLARION_RELEASE=${{BUILD_LABEL%%-*}}" > build_env.txt
        - inject:
            properties-file: build_env.txt
        - satellite6-automation-builders
        - satellite6-polarion-testrun-builders:
            parallel_results: "tier2-parallel-results.xml"
            sequential_results: "tier2-sequential-results.xml"
            satellite_version: "{satellite_version}"
            os: "{os}"
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-{satellite_version}-tier3-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-tier3-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=tier3
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - shell: echo "POLARION_RELEASE=${{BUILD_LABEL%%-*}}" > build_env.txt
        - inject:
            properties-file: build_env.txt
        - satellite6-automation-builders
        - satellite6-polarion-testrun-builders:
            parallel_results: "tier3-parallel-results.xml"
            sequential_results: "tier3-sequential-results.xml"
            satellite_version: "{satellite_version}"
            os: "{os}"
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-{satellite_version}-tier4-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-rhai-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=rhai
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - satellite6-automation-builders
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[234])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: 'automation-{satellite_version}-destructive-{os}'
                      current-parameters: true
    publishers:
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"
        - email-ext:
            recipients: $PROJECT_DEFAULT_RECIPIENTS
            reply-to: $PROJECT_DEFAULT_REPLYTO
            content-type: text
            subject: "$PROJECT_NAME - Build number: $BUILD_NUMBER - $BUILD_STATUS!"
            body: |
                "$PROJECT_NAME - Build number: $BUILD_NUMBER - $BUILD_STATUS:

                Check console output at $BUILD_URL to view the results."
            unstable: true
            failure: true
            success: true

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-tier4-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=tier4
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - shell: echo "POLARION_RELEASE=${{BUILD_LABEL%%-*}}" > build_env.txt
        - inject:
            properties-file: build_env.txt
        - satellite6-automation-builders
        - satellite6-polarion-testrun-builders:
            parallel_results: "tier4-parallel-results.xml"
            sequential_results: "tier4-sequential-results.xml"
            satellite_version: "{satellite_version}"
            os: "{os}"
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'report-automation-results-{satellite_version}-{os}'
              predefined-parameters: |
                  BUILD_LABEL=${{BUILD_LABEL}}
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[123])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: 'automation-{satellite_version}-rhai-{os}'
                      current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"

- job-template:
    disabled: false
    name: 'automation-{satellite_version}-destructive-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=destructive
                DISTRO={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - satellite6-automation-builders
        - conditional-step:
            condition-kind: and
            condition-operands:
                - condition-kind: regex-match
                  regex: (rhel7)
                  label: ${{ENV,var="DISTRO"}}
                - condition-kind: regex-match
                  regex: (6\.[234])
                  label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: 'report-consolidated-coverage-{satellite_version}-{os}'
                      current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver
        - satellite6-automation-coverage:
            file_path: "coverage.xml"

- job-template:
    disabled: false
    name: 'report-automation-results-{satellite_version}-{os}'
    node: sat6-{satellite_version}
    parameters:
      - string:
          name: BUILD_LABEL
          description: |
              'Specify the build label of the Satellite. Example Satellite 6.3.0-1.0,
              Which is of the format Satellite 6.y.z-SNAP.COMPOSE.
              Note this BUILD_LABEL is also used to calculate POLARION_RELEASE.'
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo-ci.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="BUILD_LABEL"}}'
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
    builders:
        - shell: rm -f *.xml
        - copyartifact:
            project: 'automation-{satellite_version}-tier1-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier2-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier3-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier4-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - satellite6-automation-reports-builders
    publishers:
        - email-ext:
            recipients: ${{QE_EMAIL_LIST}}
            success: true
            failure: false
            subject: 'Satellite {satellite_version} Automation Report for {os}'
            body: |
                The build ${{BUILD_URL}} has been completed.

                ${{FILE, path="report.txt"}}
            attachments: report.html

- job-template:
    disabled: false
    name: 'report-upgrade-tier-automation-results-{satellite_version}-{os}'
    node: sat6-{satellite_version}
    parameters:
      - string:
          name: BUILD_LABEL
          description: |
              'Specify the build label of the Satellite. Example Satellite 6.3.0-1.0,
              Which is of the format Satellite 6.y.z-SNAP.COMPOSE.
              Note this BUILD_LABEL is also used to calculate POLARION_RELEASE.'
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo-ci.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="BUILD_LABEL"}}'
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
    builders:
        - shell: rm -f *.xml
        - copyartifact:
            project: 'automation-upgraded-{satellite_version}-all-tiers-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - copyartifact:
            project: 'automation-upgraded-{satellite_version}-end-to-end-{os}'
            filter: '*-results.xml'
            which-build: last-successful
        - satellite6-automation-reports-builders
    publishers:
        - email-ext:
            recipients: ${{QE_EMAIL_LIST}}
            success: true
            failure: false
            subject: 'Satellite {satellite_version} Upgrade Tiers Automation Report for {os}'
            body: |
                The build ${{BUILD_URL}} has been completed.

                ${{FILE, path="report.txt"}}
            attachments: report.html

- job-template:
    name: 'report-consolidated-coverage-{satellite_version}-{os}'
    node: sat6-{satellite_version}
    parameters:
        - satellite6-automation-parameters
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=coverage
                DISTRO={os}
    scm:
        - git:
            url: https://github.com/SatelliteQE/automation-tools.git
            branches:
                - origin/master
            skip-tag: true
    builders:
        - shell: rm -f coverage.*.tar
        - copyartifact:
            project: 'automation-{satellite_version}-tier1-{os}'
            filter: 'coverage.tier1.tar,tfm_reports_tier1.tar'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier2-{os}'
            filter: 'coverage.tier2.tar,tfm_reports_tier2.tar'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier3-{os}'
            filter: 'coverage.tier3.tar,tfm_reports_tier3.tar'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-tier4-{os}'
            filter: 'coverage.tier4.tar,tfm_reports_tier4.tar'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-rhai-{os}'
            filter: 'coverage.rhai.tar,tfm_reports_rhai.tar'
            which-build: last-successful
        - copyartifact:
            project: 'automation-{satellite_version}-destructive-{os}'
            filter: 'coverage.destructive.tar,tfm_reports_destructive.tar'
            which-build: last-successful
        - satellite6-consolidated-reports-builders:
    publishers:
        - satellite6-automation-coverage:
            file_path: "coverage/coverage.xml"
        - email-ext:
            recipients: ${{QE_EMAIL_LIST}}
            success: true
            failure: false
            subject: 'Satellite {satellite_version} Consolidated Coverage Report and SonarQube Analysis Report for {os}'
            body: |
                The build ${{BUILD_URL}} has been completed.

                Please refer the attachment for the consolidated coverage report from,
                tier1, tier2, tier3, tier4, rhai and destructive jobs.

                The Pulp Python SonarQube Analysis link, ${{SONAR_SERVER_URL}}/dashboard/index/Satellite{satellite_version}_pulp_python_full_analysis
                The TFM Ruby SonarQube Analysis link, ${{SONAR_SERVER_URL}}/dashboard/index/Satellite{satellite_version}_tfm_ruby_full_analysis
            attachments: coverage/coverage_report.txt

- job-template:
    name: 'satellite6-sanity-check-{satellite_version}-{os}'
    description: |
        Quickly up an instance using VLANs for feature and Bug testing. We could use the two new physical hardware which were
        recently procured. This would help fully automate sat6 installation to do Libvirt, RHEVM and Openstack CR Testing.
    node: sat6-{satellite_version}
    parameters:
        - choice:
            name: SATELLITE_DISTRIBUTION
            choices:
                - 'INTERNAL'
                - 'INTERNAL AK'
                - 'INTERNAL REPOFILE'
                - 'GA'
            description: |
                INTERNAL AK and INTERNAL REPOFILE choices are valid currently only for sat6.3
        - string:
            name: BASE_URL
            description: Required when Satellite distribution is INTERNAL
        - string:
            name: BUILD_LABEL
            description: |
                'Specify the build label of the Satellite. Example Satellite 6.3.0-1.0,
                Which is of the format Satellite 6.y.z-SNAP.COMPOSE.
                Note this BUILD_LABEL is also used to calculate POLARION_RELEASE.'
        - choice:
            name: SELINUX_MODE
            choices:
                - 'enforcing'
                - 'permissive'
        - choice:
            name: PROXY_MODE
            choices:
                - 'authenticated'
                - 'non-authenticated'
                - 'no-proxy'
        - string:
            name: ADMIN_PASSWORD
            default: changeme
            description: "Specify the admin password if changed from the default set."
        - string:
            name: MANIFEST_LOCATION_URL
            description: This is Mandatory. Host your Manifest file on any server and pass the URL link.
        - choice:
            name: DOWNLOAD_POLICY
            choices:
                - 'on_demand'
                - 'immediate'
                - 'background'
            description: |
                For satellite 6.2 - the default installation setup is immediate.
                For satellite 6.3 - the default installation setup is on_demand
                The chosen download policy will override the installation download policy on your satellite.
                Immediate is the default choice for this job as this is more stable option.
        - bool:
            name: STAGE_TEST
            default: false
            description: |
                Points to RHSM stage for stage installation test. Used only
                in CDN provisioning.
        - satellite6-authentication-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/automation-tools.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                PROVISIONING_ID=paprika
                SERVER_ID=sat-feature-{os}
                DISTRO={os}
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="PROVISIONING_ID"}} ${{ENV,var="SERVER_ID"}} ${{ENV,var="BUILD_LABEL"}}'
    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-3.6
            clear: true
            nature: shell
            command:
                !include-raw-escape:
                    - 'pip-install-pycurl.sh'
                    - 'satellite6-libvirt-install.sh'
                    - 'satellite6-add-provison-host.sh'
                    - 'satellite6-libvirt-install-manifest.sh'
                    - 'satellite6-configure-variables.sh'
        - trigger-builds:
            - project: 'capsule-sanity-check-{satellite_version}-{os}'
              current-parameters: true
              predefined-parameters: |
                SATELLITE_SERVER_ID=${{SERVER_ID}}
                BUILD_LABEL=${{BUILD_LABEL}}


- job-template:
    name: 'capsule-sanity-check-{satellite_version}-{os}'
    description: |
        Quickly up an instance using VLANs for Sanity Check of every build, by provisioning a Host on Libvirt Compute Resource.
    node: sat6-{satellite_version}
    parameters:
        - string:
            name: BUILD_LABEL
            description: |
                'Specify the build label of the Satellite. Example Satellite 6.3.0-1.0,
                Which is of the format Satellite 6.y.z-SNAP.COMPOSE.
                Note this BUILD_LABEL is also used to calculate POLARION_RELEASE.'
        - string:
            name: ADMIN_PASSWORD
            default: changeme
            description: "Specify the admin password if changed from the default set."
        - string:
            name: SATELLITE_SERVER_ID
            description: "Specify the Server ID of Satellite6. Example sat-feature-rhel7 or sat-feature-rhel6"
        - bool:
            name: PROVISIONING_SETUP
            default: true
            description: |
                'Specify whether to set the provisioning functionality for the Capsule.
                 By default, it will only configure the stuff generated by capsule-generate-certs command.'
        - string:
            name: INTERFACE
            default: eth0
            description: |
                Default value is eth0 if not specified.
        - bool:
            name: RERUN
            default: false
            description: |
                'Rerun of this job would not attempt to re-create the capsule certs.'
    scm:
        - git:
            url: https://github.com/SatelliteQE/automation-tools.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                PROVISIONING_ID=paprika
                SERVER_ID=cap-feature-{os}
                DISTRO={os}
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="PROVISIONING_ID"}} ${{ENV,var="SERVER_ID"}} ${{ENV,var="BUILD_LABEL"}}'
    builders:
        - satellite6-capsule-sanity-check-builders

- job-template:
    disabled: false
    name: 'upgrade-to-{satellite_version}-{os}'
    concurrent: true
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    node: sat6-{satellite_version}
    parameters:
        - string:
            name: BUILD_LABEL
            description: |
                Specify the build label of the Satellite. Example Sat6.3.0-1.0
                Which is Sat6.y.z-SNAP.COMPOSE
        - string:
            name: ROBOTTELO_WORKERS
            default: '8'
            description: |
                Number of workers to use while running robottelo all tiers test suite
                after the upgrade.
        - bool:
            name: ZSTREAM_UPGRADE
            default: false
            description: |
                This option is helpful in manually triggering this job for zStream upgrade.
                e.g 6.3.0 to 6.3.1
        - bool:
            name: PERFORM_FOREMAN_MAINTAIN_UPGRADE
            default: true
            description: |
                This option allows to use foreman-maintain for satellite-upgrade.
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=setup
                OS={os}
        - build-name:
            name: '#${{BUILD_NUMBER}} Upgrade_{os}_to_{satellite_version} ${{BUILD_LABEL}}'
    builders:
        - satellite6-upgrade-builders
        - inject:
            properties-file: properties.txt
        - trigger-builds:
            - project: 'automation-preupgrade-{satellite_version}-scenario-tests-{os}'
              current-parameters: true
              predefined-parameters: |
                SERVER_HOSTNAME=${{SERVER_HOSTNAME}}
                RHEL6_TOOLS_REPO=${{RHEL6_TOOLS_REPO}}
                RHEL7_TOOLS_REPO=${{RHEL7_TOOLS_REPO}}
                CAPSULE_REPO=${{CAPSULE_REPO}}
                SUBNET=${{SUBNET}}
                NETMASK=${{NETMASK}}
                GATEWAY=${{GATEWAY}}
                BRIDGE=${{BRIDGE}}
                BUILD_LABEL=${{BUILD_LABEL}}
                DISCOVERY_ISO=${{DISCOVERY_ISO}}
                ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}
                PERFORM_FOREMAN_MAINTAIN_UPGRADE=${{PERFORM_FOREMAN_MAINTAIN_UPGRADE}}
    publishers:
        - satellite6-automation-mails
        - archive:
            artifacts: 'product_setup'


- job-template:
    disabled: false
    name: 'automation-preupgrade-{satellite_version}-scenario-tests-{os}'
    concurrent: true
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    node: sat6-{satellite_version}
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=pre-upgrade
                OS={os}
        - build-name:
            name: '#${{BUILD_NUMBER}} preupgrade-scenarios-Upgrade_{os}_to_{satellite_version} ${{BUILD_LABEL}}'
    builders:
        - copyartifact:
            project: 'upgrade-to-{satellite_version}-{os}'
            filter: 'product_setup'
            which-build: last-successful
        - satellite6-upgrade-scenarios-builders
        - trigger-builds:
            - project: 'upgrade-phase-{satellite_version}-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - archive:
            artifacts: 'preupgrade_*,scenario_entities,product_setup'


- job-template:
    disabled: false
    name: 'upgrade-phase-{satellite_version}-{os}'
    concurrent: true
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    node: sat6-{satellite_version}
    parameters:
        - string:
            name: BUILD_LABEL
            description: |
                Specify the build label of the Satellite. Example Sat6.3.0-1.0
                Which is Sat6.y.z-SNAP.COMPOSE
        - string:
            name: ROBOTTELO_WORKERS
            default: '8'
            description: |
                Number of workers to use while running robottelo all tiers test suite
                after the upgrade.
        - bool:
            name: ZSTREAM_UPGRADE
            default: false
            description: |
                This option is helpful in manually triggering this job for zStream upgrade.
                e.g 6.3.0 to 6.3.1
        - bool:
            name: PERFORM_FOREMAN_MAINTAIN_UPGRADE
            default: true
            description: |
                This option allows to use foreman-maintain for satellite-upgrade.
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=upgrade
                OS={os}
        - build-name:
            name: '#${{BUILD_NUMBER}} Upgrade_{os}_to_{satellite_version} ${{BUILD_LABEL}}'
    builders:
        - copyartifact:
            project: 'automation-preupgrade-{satellite_version}-scenario-tests-{os}'
            filter: 'preupgrade_*,scenario_entities,product_setup'
            which-build: last-successful
        - satellite6-upgrade-builders
        - inject:
            properties-file: properties.txt
        - trigger-builds:
            - project: 'automation-upgraded-{satellite_version}-existence-tests-{os}'
              current-parameters: true
    publishers:
        - archive:
            artifacts: '*.tar.xz,postupgrade_*,preupgrade_*,scenario_entities,product_setup'
        - email-ext:
            recipients: ${{QE_EMAIL_LIST}}
            success: true
            subject: 'Upgrade Status to {satellite_version} on {os} ${{BUILD_LABEL}} - $BUILD_STATUS'
            body: |
                ${{FILE, path="upgrade_highlights"}}
                Build URL: ${{BUILD_URL}}
            attachments: full_upgrade, Log_Analyzer_Logs.tar.xz

- job-template:
    disabled: false
    name: 'automation-upgraded-{satellite_version}-existence-tests-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
    builders:
        - copyartifact:
            project: 'upgrade-phase-{satellite_version}-{os}'
            filter: 'postupgrade_*,preupgrade_*,scenario_entities,product_setup'
            which-build: last-successful

        - satellite6-upgrade-existence-builders
        - trigger-builds:
            - project: 'automation-postupgrade-{satellite_version}-scenario-tests-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - archive:
            artifacts: 'postupgrade_*,preupgrade_*,scenario_entities,product_setup'

- job-template:
    disabled: false
    name: 'automation-postupgrade-{satellite_version}-scenario-tests-{os}'
    concurrent: true
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    node: sat6-{satellite_version}
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - default-wrappers
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=post-upgrade
                OS={os}
        - build-name:
            name: '#${{BUILD_NUMBER}} Upgrade_{os}_to_{satellite_version} ${{BUILD_LABEL}}'
    builders:
        - copyartifact:
            project: 'automation-upgraded-{satellite_version}-existence-tests-{os}'
            filter: 'product_setup,scenario_entities'
            which-build: last-successful
        - satellite6-upgrade-scenarios-builders
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-upgraded-{satellite_version}-all-tiers-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - archive:
            artifacts: 'scenario_entities,product_setup'

- job-template:
    disabled: false
    name: 'automation-upgraded-{satellite_version}-all-tiers-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=all-tiers
                OS={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - satellite6-upgrade-tiers-builders
        - trigger-builds:
            - project: 'satellite6-manifest-downloader'
        - trigger-builds:
            - project: 'automation-upgraded-{satellite_version}-end-to-end-{os}'
              current-parameters: true
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver

- job-template:
    disabled: false
    name: 'automation-upgraded-{satellite_version}-end-to-end-{os}'
    node: sat6-{satellite_version}
    build-discarder:
        num-to-keep: 16
    properties:
        - satellite6-upgrade-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - build-discarder:
            num-to-keep: 16
    parameters:
        - satellite6-automation-parameters
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    wrappers:
        - satellite6-automation-wrappers
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
                ENDPOINT=end-to-end
                OS={os}
        - satellite6-maskpassword-wrappers
        - satellite6-sauce-ondemand-wrappers
    builders:
        - satellite6-upgrade-tiers-builders
        - shell: echo "POLARION_RELEASE=${{BUILD_LABEL%%-*}}" > build_env.txt
        - inject:
            properties-file: build_env.txt
        - trigger-builds:
            - project: 'report-upgrade-tier-automation-results-{satellite_version}-{os}'
              predefined-parameters: |
                  BUILD_LABEL=${{BUILD_LABEL}}
        - trigger-builds:
            - project: 'polarion-upgraded-test-run-{satellite_version}-{os}'
              predefined-parameters: |
                  TEST_RUN_ID=$BUILD_LABEL {os} upgrade
                  POLARION_RELEASE=$POLARION_RELEASE upgrade
    publishers:
        - satellite6-automation-mails
        - satellite6-automation-publishers
        - satellite6-automation-archiver

- job-template:
    disabled: false
    name: trigger-satellite-{satellite_version}
    description: Triggers automation for Satellite 6
    node: sat6-rhel
    parameters:
        - choice:
            name: SATELLITE_DISTRIBUTION
            choices:
                 - 'INTERNAL AK'
                 - 'INTERNAL'
                 - 'INTERNAL REPOFILE'
                 - 'GA'
                 - 'BETA'
            description: Make sure to select the right Satellite release you want to install, otherwise the job can fail.
        - string:
            name: RHEL6_IMAGE
            description: |
                Specify RHEL6 source image to be used for automation.
        - string:
            name: RHEL6_SATELLITE_URL
            description: |
                Leave it blank to install the latest stable.
        - string:
            name: RHEL6_CAPSULE_URL
            description: |
                Leave it blank to install the latest stable. Example: http://example.com/path/to/Satellite/Satellite-6.1.0-RHEL-6-20150311.1/compose/Capsule/x86_64/os
        - string:
            name: RHEL6_TOOLS_URL
            description: |
                Leave it blank to install the latest stable. Example: http://example.com/path/to/Satellite/Satellite-6.1.0-RHEL-6-20150311.1/compose/sattools/x86_64/os
        - string:
            name: RHEL7_IMAGE
            description: |
                Specify RHEL7 source image to be used for automation.
        - string:
            name: RHEL7_SATELLITE_URL
            description: |
                Leave it blank to install the latest stable.
        - string:
            name: RHEL7_CAPSULE_URL
            description: |
                Leave it blank to install the latest stable. Example: http://example.com/path/to/Satellite/Satellite-6.1.0-RHEL-7-20150311.1/compose/Capsule/x86_64/os
        - string:
            name: RHEL7_TOOLS_URL
            description: |
                Leave it blank to install the latest stable. Example: http://example.com/path/to/Satellite/Satellite-6.1.0-RHEL-7-20150311.1/compose/sattools/x86_64/os
        - satellite6-provisioning-parameters
        - satellite6-authentication-parameters
    wrappers:
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="BUILD_LABEL"}}'
    builders:
        - shell: |
            source ${{CONFIG_FILES}}
            source config/sat6_repos_urls.conf
            echo "RHEL6_SATELLITE_URL=${{RHEL6_SATELLITE_URL:-${{SATELLITE6_RHEL6}}}}" >> properties.txt
            echo "RHEL6_CAPSULE_URL=${{RHEL6_CAPSULE_URL:-${{CAPSULE_RHEL6}}}}" >> properties.txt
            echo "RHEL6_TOOLS_URL=${{RHEL6_TOOLS_URL:-${{TOOLS_RHEL6}}}}" >> properties.txt
            echo "RHEL7_SATELLITE_URL=${{RHEL7_SATELLITE_URL:-${{SATELLITE6_RHEL7}}}}" >> properties.txt
            echo "RHEL7_CAPSULE_URL=${{RHEL7_CAPSULE_URL:-${{CAPSULE_RHEL7}}}}" >> properties.txt
            echo "RHEL7_TOOLS_URL=${{RHEL7_TOOLS_URL:-${{TOOLS_RHEL7}}}}" >> properties.txt
        - inject:
            properties-file: properties.txt
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[12])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: provisioning-{satellite_version}-rhel6
                      predefined-parameters: |
                        BASE_URL=${{RHEL6_SATELLITE_URL}}
                        CAPSULE_URL=${{RHEL6_CAPSULE_URL}}
                        RHEL6_TOOLS_URL=${{RHEL6_TOOLS_URL}}
                        RHEL7_TOOLS_URL=${{RHEL7_TOOLS_URL}}
                        SELINUX_MODE=${{SELINUX_MODE}}
                        SATELLITE_DISTRIBUTION=${{SATELLITE_DISTRIBUTION}}
                        ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}
                        PROXY_MODE=${{PROXY_MODE}}
                        BUILD_LABEL=${{BUILD_LABEL}}
                        EXTERNAL_AUTH=${{EXTERNAL_AUTH}}
                        IDM_REALM=${{IDM_REALM}}
                        IMAGE=${{RHEL6_IMAGE}}
                        SAUCE_BROWSER=${{SAUCE_BROWSER}}
                        SAUCE_PLATFORM=${{SAUCE_PLATFORM}}
        - trigger-builds:
            - project: provisioning-{satellite_version}-rhel7
              predefined-parameters: |
                BASE_URL=${{RHEL7_SATELLITE_URL}}
                CAPSULE_URL=${{RHEL7_CAPSULE_URL}}
                RHEL6_TOOLS_URL=${{RHEL6_TOOLS_URL}}
                RHEL7_TOOLS_URL=${{RHEL7_TOOLS_URL}}
                SELINUX_MODE=${{SELINUX_MODE}}
                SATELLITE_DISTRIBUTION=${{SATELLITE_DISTRIBUTION}}
                ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}
                PROXY_MODE=${{PROXY_MODE}}
                BUILD_LABEL=${{BUILD_LABEL}}
                EXTERNAL_AUTH=${{EXTERNAL_AUTH}}
                IDM_REALM=${{IDM_REALM}}
                IMAGE=${{RHEL7_IMAGE}}
                SAUCE_BROWSER=${{SAUCE_BROWSER}}
                SAUCE_PLATFORM=${{SAUCE_PLATFORM}}
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[234])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: satellite6-sanity-check-{satellite_version}-rhel7
                      predefined-parameters: |
                        BASE_URL=${{RHEL7_SATELLITE_URL}}
                        SELINUX_MODE=${{SELINUX_MODE}}
                        SATELLITE_DISTRIBUTION=${{SATELLITE_DISTRIBUTION}}
                        PROXY_MODE=${{PROXY_MODE}}
                        BUILD_LABEL=${{BUILD_LABEL}}
                        EXTERNAL_AUTH=${{EXTERNAL_AUTH}}
                        IDM_REALM=${{IDM_REALM}}
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[2])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: satellite6-sanity-check-{satellite_version}-rhel6
                      predefined-parameters: |
                        BASE_URL=${{RHEL6_SATELLITE_URL}}
                        SELINUX_MODE=${{SELINUX_MODE}}
                        SATELLITE_DISTRIBUTION=${{SATELLITE_DISTRIBUTION}}
                        PROXY_MODE=${{PROXY_MODE}}
                        BUILD_LABEL=${{BUILD_LABEL}}
                        EXTERNAL_AUTH=${{EXTERNAL_AUTH}}
                        IDM_REALM=${{IDM_REALM}}
        - trigger-builds:
            - project: polarion-test-case
        - trigger-builds:
            - project: polarion-upgrade-test-case
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.2)
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: upgrade-to-{satellite_version}-rhel6
                      predefined-parameters: |
                        BUILD_LABEL=${{BUILD_LABEL}}
                        ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}
        - conditional-step:
            condition-kind: regex-match
            regex: (6\.[234])
            label: ${{ENV,var="SATELLITE_VERSION"}}
            steps:
                - trigger-builds:
                    - project: upgrade-to-{satellite_version}-rhel7
                      predefined-parameters: |
                        BUILD_LABEL=${{BUILD_LABEL}}
                        ROBOTTELO_WORKERS=${{ROBOTTELO_WORKERS}}

#==============================================================================
# Project
#==============================================================================
- project:
    name: satellite6-automation
    scm-branch: origin/master
    satellite_version:
        - '6.1':
            scm-branch: origin/6.1.z
        - '6.2':
            scm-branch: origin/6.2.z
        - '6.3':
            scm-branch: origin/6.3.z
        - '6.4'
        - 'upstream-nightly'
        - 'downstream-nightly'
    os:
        - 'rhel6'
        - 'rhel7'
    exclude:
        - satellite_version: '6.3'
          os: 'rhel6'
        - satellite_version: '6.4'
          os: 'rhel6'
        - satellite_version: 'upstream-nightly'
          os: 'rhel6'
        - satellite_version: 'downstream-nightly'
          os: 'rhel6'
    jobs:
        - 'provisioning-{satellite_version}-{os}'
        - 'automation-{satellite_version}-tier1-{os}'
        - 'automation-{satellite_version}-tier2-{os}'
        - 'automation-{satellite_version}-tier3-{os}'
        - 'automation-{satellite_version}-tier4-{os}'
        - 'automation-{satellite_version}-rhai-{os}'
        - 'automation-{satellite_version}-destructive-{os}'
        - 'polarion-test-run-{satellite_version}-{os}'
        - 'report-automation-results-{satellite_version}-{os}'
        - 'report-consolidated-coverage-{satellite_version}-{os}'


- project:
    name: satellite6-sanitycheck
    scm-branch: origin/master
    satellite_version:
        - '6.2'
        - '6.3'
        - '6.4'
    os:
        - 'rhel6'
        - 'rhel7'
    exclude:
        - satellite_version: '6.3'
          os: 'rhel6'
        - satellite_version: '6.4'
          os: 'rhel6'
    jobs:
        - 'satellite6-sanity-check-{satellite_version}-{os}'
        - 'capsule-sanity-check-{satellite_version}-{os}'


# Let's have a separate project for Upgrade Jobs.
- project:
    name: satellite6-upgrade
    scm-branch: origin/master
    satellite_version:
        - '6.2':
            scm-branch: origin/6.2.z
        - '6.3':
            scm-branch: origin/6.3.z
        - '6.4'
    os:
        - 'rhel6'
        - 'rhel7'
    exclude:
        - satellite_version: '6.3'
          os: 'rhel6'
        - satellite_version: '6.4'
          os: 'rhel6'
    jobs:
        - 'upgrade-to-{satellite_version}-{os}'
        - 'automation-preupgrade-{satellite_version}-scenario-tests-{os}'
        - 'upgrade-phase-{satellite_version}-{os}'
        - 'automation-upgraded-{satellite_version}-existence-tests-{os}'
        - 'automation-postupgrade-{satellite_version}-scenario-tests-{os}'
        - 'automation-upgraded-{satellite_version}-all-tiers-{os}'
        - 'automation-upgraded-{satellite_version}-end-to-end-{os}'
        - 'polarion-upgraded-test-run-{satellite_version}-{os}'
        - 'report-upgrade-tier-automation-results-{satellite_version}-{os}'


# Let's have a separate project for triggers.
- project:
    name: satellite6-triggers
    satellite_version:
        - '6.1'
        - '6.2'
        - '6.3'
        - '6.4'
        - 'downstream-nightly'
    jobs:
        - 'trigger-satellite-{satellite_version}'

#==============================================================================
# Jobs
#==============================================================================
- job:
    disabled: false
    name: trigger-upstream-nightly
    description: Triggers automation for Satellite 6 upstream using katello-deploy.
    node: sat6-rhel
    parameters:
        - string:
            name: ROBOTTELO_WORKERS
            default: '8'
            description: Number of workers to use while running robottelo test suite
        - choice:
            name: SATELLITE_DISTRIBUTION
            choices:
                 - 'UPSTREAM'
                 - 'KOJI'
            description: UPSTREAM gives you nightly from regular repos, while KOJI gives you staging nightly (from koji repos).
        - string:
            name: IDM_REALM
            default: false
    wrappers:
        - config-file-provider:
            files:
                - file-id: bc5f0cbc-616f-46de-bdfe-2e024e84fcbf
                  variable: CONFIG_FILES
        - inject:
            properties-content: |
                SATELLITE_VERSION=upstream-nightly
        - build-name:
            name: '#${BUILD_NUMBER} ${ENV,var="BUILD_LABEL"}'
    triggers:
        - timed: 'H 19 * * 0,2,4'
    builders:
        - shell: |
            source ${CONFIG_FILES}
            source config/sat6_repos_urls.conf
            echo "RHEL6_TOOLS_URL=${RHEL6_TOOLS_URL:-${TOOLS_RHEL6}}" >> properties.txt
            echo "RHEL7_TOOLS_URL=${RHEL7_TOOLS_URL:-${TOOLS_RHEL7}}" >> properties.txt
            echo "BUILD_LABEL=Upstream Nightly-$(date +%Y-%m-%d)" >> properties.txt
        - inject:
            properties-file: properties.txt
        - trigger-builds:
            - project: |
                provisioning-upstream-nightly-rhel7
              predefined-parameters: |
                BUILD_LABEL=${BUILD_LABEL}
                ROBOTTELO_WORKERS=${ROBOTTELO_WORKERS}
                SATELLITE_DISTRIBUTION=${SATELLITE_DISTRIBUTION}
                RHEL6_TOOLS_URL=${RHEL6_TOOLS_URL}
                RHEL7_TOOLS_URL=${RHEL7_TOOLS_URL}
                IDM_REALM=${IDM_REALM}
