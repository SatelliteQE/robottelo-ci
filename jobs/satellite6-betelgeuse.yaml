- job:
    name: polarion-test-case
    node: sat6-rhel
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - inject-passwords:
            global: true
            mask-password-params: true
        - inject:
            properties-content: |
                BETELGEUSE_AUTOMATION_PROJECT=robottelo
                BETELGEUSE_RESPONSE_PROPERTY=satellite6=testcases
    builders:
        - shell: rm -f *.yaml
        - copyartifact:
            project: 'satellite6-component-owners'
            filter: '**/component-owners-map.yaml'
            which-build: last-successful
        - shining-panda:
            build-environment: virtualenv
            name: betelgeuse
            python-version: System-CPython-3.8
            clear: true
            nature: shell
            command:
                !include-raw:
                    - scripts/satellite6-install-pylarion.sh
                    - scripts/satellite6-betelgeuse-test-case.sh
        - satellite6-testcase-ci-subscribe.yaml:
            selector: satellite6 = 'testcases'
    publishers:
        - satellite6-automation-mails


- job-template:
    name: polarion-trigger-{satellite_version}-{os}
    project-type: multijob
    node: sat6-{satellite_version}
    parameters:
        - string:
            name: TEST_RUN_ID
            description: |
                'The resulting test run id is going to be suffixed with tierN '
                'to differentiate between all tiers.'
        - string:
            name: POLARION_RELEASE
    wrappers:
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="TEST_RUN_ID"}}'
    builders:
        - multijob:
            name: PhaseOne
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=tier1
        - multijob:
            name: PhaseTwo
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=tier2
        - multijob:
            name: PhaseThree
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=tier3
        - multijob:
            name: PhaseFour
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=tier4
        - multijob:
            name: PhaseFive
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=rhai
        - multijob:
            name: PhaseSix
            condition: ALWAYS
            projects:
              - name: 'polarion-test-run-{satellite_version}-{os}'
                predefined-parameters: |
                  TEST_RUN_ID=${{TEST_RUN_ID}}
                  POLARION_RELEASE=${{POLARION_RELEASE}}
                  PULL_ARTIFACTS=true
                  ENDPOINT=destructive

- job-template:
    name: polarion-test-run-{satellite_version}-{os}
    node: sat6-{satellite_version}
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    properties:
        - satellite6-polarion-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    parameters:
        - string:
            name: TEST_RUN_ID
            description: |
                'The resulting test run id is going to be suffixed with tierN '
                'to differentiate between all tiers.'
        - string:
            name: POLARION_RELEASE
        - choice:
            name: ENDPOINT
            choices:
                 - 'none'
                 - 'tier1'
                 - 'tier2'
                 - 'tier3'
                 - 'tier4'
                 - 'rhai'
                 - 'destructive'
        - bool:
            name: PULL_ARTIFACTS
            default: false
            description: |
                'Required only when manually triggering the job.'
    wrappers:
        - inject-passwords:
            global: true
            mask-password-params: true
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="TEST_RUN_ID"}} ${{ENV,var="ENDPOINT"}}'
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
    builders:
        - satellite6-pull-artifacts-builders:
            satellite_version: "{satellite_version}"
            os: "{os}"
        - shining-panda:
            build-environment: virtualenv
            name: betelgeuse
            python-version: System-CPython-3.8
            clear: true
            nature: shell
            command:
                !include-raw-escape:
                    - scripts/satellite6-install-pylarion.sh
                    - scripts/satellite6-betelgeuse-test-run.sh
    publishers:
        - satellite6-automation-mails


- job:
    name: polarion-upgrade-test-case
    node: sat6-rhel
    scm:
        - git:
            url: https://github.com/SatelliteQE/satellite6-upgrade.git
            branches:
                - origin/master
            skip-tag: true
    wrappers:
        - inject-passwords:
            global: true
            mask-password-params: true
        - inject:
            properties-content: |
                BETELGEUSE_TC_PATH=upgrade_tests/test_existance_relations
                BETELGEUSE_AUTOMATION_PROJECT=satellite6-upgrade
                BETELGEUSE_RESPONSE_PROPERTY=satellite6=upgrade-testcases
    builders:
        - shell: rm -f *.yaml
        - copyartifact:
            project: 'satellite6-component-owners'
            filter: '**/component-owners-map.yaml'
            which-build: last-successful
        - shining-panda:
            build-environment: virtualenv
            name: betelgeuse
            python-version: System-CPython-3.8
            clear: true
            nature: shell
            command:
                !include-raw:
                    - scripts/satellite6-install-pylarion.sh
                    - scripts/satellite6-betelgeuse-test-case.sh
        - satellite6-testcase-ci-subscribe.yaml:
            selector: satellite6 = 'upgrade-testcases'
    publishers:
        - satellite6-automation-mails


- job-template:
    name: polarion-upgraded-test-run-{satellite_version}-{os}
    node: sat6-{satellite_version}
    scm:
        - git:
            url: https://github.com/SatelliteQE/robottelo.git
            branches:
                - '{scm-branch}'
            skip-tag: true
    properties:
        - satellite6-polarion-build_blocker:
            satellite_version: "{satellite_version}"
            os: "{os}"
    parameters:
        - string:
            name: TEST_RUN_ID
            description: |
                'The resulting test run id is going to be suffixed with tierN '
                'to differentiate between all tiers.'
        - string:
            name: POLARION_RELEASE
    wrappers:
        - inject-passwords:
            global: true
            mask-password-params: true
        - build-name:
            name: '#${{BUILD_NUMBER}} ${{ENV,var="TEST_RUN_ID"}}'
        - inject:
            properties-content: |
                SATELLITE_VERSION={satellite_version}
    builders:
        - copyartifact:
            project: automation-upgraded-{satellite_version}-all-tiers-{os}
            filter: '*-results.xml'
            which-build: upstream-build
        - copyartifact:
            project: automation-upgraded-{satellite_version}-end-to-end-{os}
            filter: '*-results.xml'
            which-build: upstream-build
        - shining-panda:
            build-environment: virtualenv
            name: betelgeuse
            python-version: System-CPython-3.8
            clear: true
            nature: shell
            command:
                !include-raw-escape:
                    - scripts/satellite6-install-pylarion.sh
                    - scripts/satellite6-betelgeuse-test-run.sh
    publishers:
        - satellite6-automation-mails
